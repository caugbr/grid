// Sample styles

@import "../grid/grid-variables";
@import "../grid/grid-mixins";

@function random-color($from: 0, $to: 255) {
  @return rgb(random($to - $from) + $from, random($to - $from) + $from, random($to - $from) + $from);
}

@mixin coloured-list($prefix: "", $count: 20, $sufix: "") {
  @for $i from 1 through $count {
    #{$prefix}:nth-child(#{$i})#{$sufix} {
      background-color: #{random-color(100, 220)};
    }
  }
}

* {
  box-sizing: border-box;
  font-family: 'Sofia Sans Semi Condensed', sans-serif;
}

main {
  @include coloured-list(".equal-widths .row > div", 3, "::before");
  @include coloured-list(".cells-1 .row > div", 3, "::before");
  @include coloured-list(".cells-2 .row > div", 3, "::before");
  @include coloured-list(".cells-3 .row > div", 3, "::before");
  @include coloured-list(".cells-4 .row > div", 3, "::before");
  @include coloured-list(".cells-5 .row > div", 3, "::before");
  @include coloured-list(".cells-6 .row", 12, " > div::before");
  @include coloured-list(".cells-7 .row > div", 3, "::before");
  @include coloured-list(".cells-8 .row > div", 3, "::before");
  @include coloured-list(".cells-9 .row > div", 3, "::before");
  @include coloured-list(".cells-10 .row > div", 3, "::before");
  @include coloured-list(".cells-11 .row > div", 3, "::before");
  @include coloured-list(".cells-12 .row > div", 3, "::before");
  @include coloured-list(".cells-13 .row > div", 3, "::before");

  h3 {
    margin-bottom: 0.25rem;
  }

  p:first-child,
  h3 + p {
    margin-top: 0;
  }

  p:last-child {
    margin-bottom: 0;
  }

  strong {
    display: inline-block;
    margin: 2rem auto 1rem 0;
    font-size: 18px;
  }

  .the-grid {
    .container {
      background-color: #efefef;
    }

    .row {
      margin-bottom: 0.25rem;

      > div {
        height: 40px;

        &::before {
          content: attr(class);
          display: block;
          height: 40px;
          line-height: 40px;
          text-align: center;
          overflow: hidden;
        }
      }
    }
  }
}


.view-breakpoint {
  padding: 1rem;
  background-color: #fff;
  position: fixed;
  top: 0;
  right: 0;

  &::before {
    font-size: 18px;
  }

  &::after {
    font-size: 30px;
    font-weight: 600;
  }
}

$last-value: false;

@each $label, $size in $breakpoints {
  @include add-breakpoint($last-value, $size) {
    .view-breakpoint::before {
      content: "Current breakpoint: ";
    }

    .view-breakpoint::after {
      content: "#{$label}";
    }
  }

  @if index($breakpoints, $label $size) == length($breakpoints) {
    @include add-breakpoint($size) {
      .view-breakpoint::before {
        content: "Current breakpoint: ";
      }

      .view-breakpoint::after {
        content: "#{$breakpoint-beyond}";
      }
    }
  }

  $last-value: $size;
}